{"version":3,"file":"static/js/900.43edc869.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","components/FetchFunctions/FetchFunctions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castName\":\"Cast_castName__-i08u\",\"castCharacter\":\"Cast_castCharacter__Rliw1\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './Cast.module.css';\nimport { fetchCastData } from 'components/FetchFunctions/FetchFunctions';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const castData = await fetchCastData(movieId);\n\n        if (castData) {\n          setCastData(castData);\n        } else {\n          console.error('Error fetching cast: castData is undefined');\n        }\n      } catch (error) {\n        console.error('Error fetching cast', error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  return (\n    <div className={css.castContainer}>\n      <ul className={css.castList}>\n        {castData.map(({ id, name, profile_path, character }) => (\n          <li key={id} className={css.castItem}>\n            {' '}\n            <NavLink to={`/movies/${movieId}/cast`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                className={css.castImage}\n              />\n              <p className={css.castName}>{name}</p>\n              <p className={css.castCharacter}>Character: {character}</p>{' '}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  castData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=9b4d34572252a172944be66a3c78e6d5`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details: ', error);\n    throw error;\n  }\n};\n\nexport { fetchMovieDetails };\n\nconst fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=9b4d34572252a172944be66a3c78e6d5&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews', error);\n    throw error;\n  }\n};\n\nexport { fetchReviews };\n\nconst fetchCastData = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=9b4d34572252a172944be66a3c78e6d5&language=en-US`\n    );\n\n    const castData = response.data ? response.data.cast : [];\n\n    return castData;\n  } catch (error) {\n    console.error('Error fetching cast', error);\n    throw error;\n  }\n};\nexport { fetchCastData };\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","castData","setCastData","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_castData","_context","prev","next","fetchCastData","sent","console","error","t0","stop","apply","arguments","_jsx","className","css","children","map","_ref2","id","name","profile_path","character","_jsxs","NavLink","to","concat","src","alt","fetchMovieDetails","response","axios","abrupt","data","_x","fetchReviews","_callee2","_context2","results","_x2","_ref3","_callee3","_context3","cast","_x3"],"sourceRoot":""}